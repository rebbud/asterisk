/*! \file
  * \brief 8-bit raw data
  *
  * Source: gsm.example
  *
  * Copyright (C) 1999-2005, Digium Inc.
  *
  * Distributed under the terms of the GNU General Public License
  *
  */

/* Got this by converting ex_slin16 to amrnb (in RTP Format) */
static uint8_t ex_amrnb[] = {
	0x23, 0x21, 0x41, 0x4d, 0x52, 0x0a, 0x04, 0x63, 0x8e, 0xcb, 0xbf, 0xf6,
	0xe5, 0xfb, 0x84, 0xe0, 0xb6, 0xec, 0xac, 0x04, 0x53, 0x18, 0x26, 0x4f,
	0xf9, 0xff, 0xa0, 0x88, 0x63, 0x06, 0x91, 0xa4
// 	0x10, 0x0c, 0x46, 0xEF, 0x18, 0xE0, 0xF0, 0x84, 0xD3, 0x43,
// 	0xDE, 0x56, 0xCA, 0x4E, 0x8E,
// 	0xda, 0xa6, 0xac, 0x2d, 0xa3, 0x50, 0x00, 0x49, 0x24, 0x92,
// 	0x49, 0x24, 0x50, 0x40, 0x49, 0x24, 0x92, 0x37, 0x24, 0x52,
// 	0x00, 0x49, 0x24, 0x92, 0x47, 0x24, 0x50, 0x80, 0x46, 0xe3,
// 	0x6d, 0xb8, 0xdc,
};

static struct ast_frame *amrnb_sample(void)
{
	static struct ast_frame f = {
		.frametype = AST_FRAME_VOICE,
		.datalen = sizeof(ex_amrnb),
		/* All frames are 20 ms long */
		.samples = ARRAY_LEN(ex_amrnb),	//AMRNB_SAMPLES,
		.mallocd = 0,
		.offset = 0,
		.src = __PRETTY_FUNCTION__,
		.data.ptr = ex_amrnb,
	};

	ast_format_set(&f.subclass.format, AST_FORMAT_AMRNB, 0);
	return &f;
}
